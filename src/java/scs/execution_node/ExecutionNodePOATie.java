package scs.execution_node;


/**
* scs/execution_node/ExecutionNodePOATie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/deployment.idl
* Friday, December 12, 2008 6:43:12 PM BRST
*/

public class ExecutionNodePOATie extends ExecutionNodePOA
{

  // Constructors

  public ExecutionNodePOATie ( scs.execution_node.ExecutionNodeOperations delegate ) {
      this._impl = delegate;
  }
  public ExecutionNodePOATie ( scs.execution_node.ExecutionNodeOperations delegate , org.omg.PortableServer.POA poa ) {
      this._impl = delegate;
      this._poa      = poa;
  }
  public scs.execution_node.ExecutionNodeOperations _delegate() {
      return this._impl;
  }
  public void _delegate (scs.execution_node.ExecutionNodeOperations delegate ) {
      this._impl = delegate;
  }
  public org.omg.PortableServer.POA _default_POA() {
      if(_poa != null) {
          return _poa;
      }
      else {
          return super._default_POA();
      }
  }
  public scs.core.IComponent startContainer (String container_name, scs.execution_node.Property[] props) throws scs.execution_node.ContainerAlreadyExists, scs.execution_node.InvalidProperty
  {
    return _impl.startContainer(container_name, props);
  } // startContainer

  public void stopContainer (String container_name) throws scs.core.InvalidName
  {
    _impl.stopContainer(container_name);
  } // stopContainer

  public scs.core.IComponent getContainer (String container_name)
  {
    return _impl.getContainer(container_name);
  } // getContainer

  public scs.execution_node.ContainerDescription[] getContainers ()
  {
    return _impl.getContainers();
  } // getContainers

  public String getName ()
  {
    return _impl.getName();
  } // getName

  private scs.execution_node.ExecutionNodeOperations _impl;
  private org.omg.PortableServer.POA _poa;

} // class ExecutionNodePOATie
