package scs.execution_node;


/**
* scs/execution_node/ExecutionNodePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/deployment.idl
* Wednesday, December 10, 2008 9:40:11 AM BRST
*/

public abstract class ExecutionNodePOA extends org.omg.PortableServer.Servant
 implements scs.execution_node.ExecutionNodeOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("startContainer", new java.lang.Integer (0));
    _methods.put ("stopContainer", new java.lang.Integer (1));
    _methods.put ("getContainer", new java.lang.Integer (2));
    _methods.put ("getContainers", new java.lang.Integer (3));
    _methods.put ("getName", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // scs/execution_node/ExecutionNode/startContainer
       {
         try {
           String container_name = in.read_string ();
           scs.execution_node.Property props[] = scs.execution_node.PropertySeqHelper.read (in);
           scs.core.IComponent $result = null;
           $result = this.startContainer (container_name, props);
           out = $rh.createReply();
           scs.core.IComponentHelper.write (out, $result);
         } catch (scs.execution_node.ContainerAlreadyExists $ex) {
           out = $rh.createExceptionReply ();
           scs.execution_node.ContainerAlreadyExistsHelper.write (out, $ex);
         } catch (scs.execution_node.InvalidProperty $ex) {
           out = $rh.createExceptionReply ();
           scs.execution_node.InvalidPropertyHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // scs/execution_node/ExecutionNode/stopContainer
       {
         try {
           String container_name = in.read_string ();
           this.stopContainer (container_name);
           out = $rh.createReply();
         } catch (scs.core.InvalidName $ex) {
           out = $rh.createExceptionReply ();
           scs.core.InvalidNameHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // scs/execution_node/ExecutionNode/getContainer
       {
         String container_name = in.read_string ();
         scs.core.IComponent $result = null;
         $result = this.getContainer (container_name);
         out = $rh.createReply();
         scs.core.IComponentHelper.write (out, $result);
         break;
       }

       case 3:  // scs/execution_node/ExecutionNode/getContainers
       {
         scs.execution_node.ContainerDescription $result[] = null;
         $result = this.getContainers ();
         out = $rh.createReply();
         scs.execution_node.ContainerDescriptionSeqHelper.write (out, $result);
         break;
       }

       case 4:  // scs/execution_node/ExecutionNode/getName
       {
         String $result = null;
         $result = this.getName ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:scs/execution_node/ExecutionNode:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ExecutionNode _this() 
  {
    return ExecutionNodeHelper.narrow(
    super._this_object());
  }

  public ExecutionNode _this(org.omg.CORBA.ORB orb) 
  {
    return ExecutionNodeHelper.narrow(
    super._this_object(orb));
  }


} // class ExecutionNodePOA
