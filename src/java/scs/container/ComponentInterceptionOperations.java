package scs.container;


/**
* scs/container/ComponentInterceptionOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/deployment.idl
* Wednesday, December 10, 2008 9:40:11 AM BRST
*/

public interface ComponentInterceptionOperations 
{

  // The same goes for positions above the list's current size.
  scs.container.ComponentHandle loadInterceptor (scs.core.ComponentId id, String[] args, int position, String type) throws scs.container.ListLockFail, scs.container.ComponentNotFound, scs.container.ComponentAlreadyLoaded, scs.container.LoadFailure;
  void unloadInterceptor (scs.container.ComponentHandle handle) throws scs.container.InterceptorNotInstalled, scs.container.ListLockFail, scs.container.ComponentNotFound;
  void changePosition (int instance_id, int position) throws scs.container.InterceptorNotInstalled, scs.container.ListLockFail, scs.container.ComponentNotFound;
  int getInterceptorPosition (int instance_id) throws scs.container.InterceptorNotInstalled, scs.container.ListLockFail, scs.container.ComponentNotFound;
  int[] getClientInterceptorsOrder ();
  int[] getServerInterceptorsOrder ();
} // interface ComponentInterceptionOperations
