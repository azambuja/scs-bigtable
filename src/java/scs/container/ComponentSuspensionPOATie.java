package scs.container;


/**
* scs/container/ComponentSuspensionPOATie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/deployment.idl
* Wednesday, December 10, 2008 9:40:11 AM BRST
*/

public class ComponentSuspensionPOATie extends ComponentSuspensionPOA
{

  // Constructors

  public ComponentSuspensionPOATie ( scs.container.ComponentSuspensionOperations delegate ) {
      this._impl = delegate;
  }
  public ComponentSuspensionPOATie ( scs.container.ComponentSuspensionOperations delegate , org.omg.PortableServer.POA poa ) {
      this._impl = delegate;
      this._poa      = poa;
  }
  public scs.container.ComponentSuspensionOperations _delegate() {
      return this._impl;
  }
  public void _delegate (scs.container.ComponentSuspensionOperations delegate ) {
      this._impl = delegate;
  }
  public org.omg.PortableServer.POA _default_POA() {
      if(_poa != null) {
          return _poa;
      }
      else {
          return super._default_POA();
      }
  }

  // a negative number means a suspension (yields coroutines)
  public void suspend ()
  {
    _impl.suspend();
  } // suspend

  public void halt ()
  {
    _impl.halt();
  } // halt

  public void resume ()
  {
    _impl.resume();
  } // resume

  public int getStatus ()
  {
    return _impl.getStatus();
  } // getStatus

  private scs.container.ComponentSuspensionOperations _impl;
  private org.omg.PortableServer.POA _poa;

} // class ComponentSuspensionPOATie
