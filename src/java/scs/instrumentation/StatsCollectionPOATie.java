package scs.instrumentation;


/**
* scs/instrumentation/StatsCollectionPOATie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/scs.instrumentation.idl
* Wednesday, December 10, 2008 9:40:12 AM BRST
*/

public class StatsCollectionPOATie extends StatsCollectionPOA
{

  // Constructors

  public StatsCollectionPOATie ( scs.instrumentation.StatsCollectionOperations delegate ) {
      this._impl = delegate;
  }
  public StatsCollectionPOATie ( scs.instrumentation.StatsCollectionOperations delegate , org.omg.PortableServer.POA poa ) {
      this._impl = delegate;
      this._poa      = poa;
  }
  public scs.instrumentation.StatsCollectionOperations _delegate() {
      return this._impl;
  }
  public void _delegate (scs.instrumentation.StatsCollectionOperations delegate ) {
      this._impl = delegate;
  }
  public org.omg.PortableServer.POA _default_POA() {
      if(_poa != null) {
          return _poa;
      }
      else {
          return super._default_POA();
      }
  }
  public scs.instrumentation.MethodStats[] getInterfaceStats (String interfaceName) throws scs.instrumentation.InterfaceStatsNotAvailable
  {
    return _impl.getInterfaceStats(interfaceName);
  } // getInterfaceStats

  public scs.instrumentation.InterfaceStats[] getComponentsStats () throws scs.instrumentation.ComponentStatsNotAvailable
  {
    return _impl.getComponentsStats();
  } // getComponentsStats

  public scs.instrumentation.ContainerStats getContainerStats ()
  {
    return _impl.getContainerStats();
  } // getContainerStats

  public scs.instrumentation.SystemIOStats getIOStats () throws scs.instrumentation.IOStatsNotAvailable
  {
    return _impl.getIOStats();
  } // getIOStats

  public scs.instrumentation.SystemNetworkStats getNetworkStats () throws scs.instrumentation.NetworkStatsNotAvailable
  {
    return _impl.getNetworkStats();
  } // getNetworkStats

  public boolean subscribeMethodNotification (String clientName, String ifname, String method, scs.event_service.EventSink sink)
  {
    return _impl.subscribeMethodNotification(clientName, ifname, method, sink);
  } // subscribeMethodNotification

  public void cancelMethodNotification (String clientName, String ifname, String method)
  {
    _impl.cancelMethodNotification(clientName, ifname, method);
  } // cancelMethodNotification

  public boolean subscribeContainerNotification (String clientName, scs.event_service.EventSink sink)
  {
    return _impl.subscribeContainerNotification(clientName, sink);
  } // subscribeContainerNotification

  public void cancelContainerNotification (String clientName)
  {
    _impl.cancelContainerNotification(clientName);
  } // cancelContainerNotification

  private scs.instrumentation.StatsCollectionOperations _impl;
  private org.omg.PortableServer.POA _poa;

} // class StatsCollectionPOATie
