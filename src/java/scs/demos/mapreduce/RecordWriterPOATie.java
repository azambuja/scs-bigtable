package scs.demos.mapreduce;


/**
* scs/demos/mapreduce/RecordWriterPOATie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/mapReduce.idl
* Friday, December 12, 2008 6:43:16 PM BRST
*/


//Define operacoes para escrever pares <key, value>
public class RecordWriterPOATie extends RecordWriterPOA
{

  // Constructors

  public RecordWriterPOATie ( scs.demos.mapreduce.RecordWriterOperations delegate ) {
      this._impl = delegate;
  }
  public RecordWriterPOATie ( scs.demos.mapreduce.RecordWriterOperations delegate , org.omg.PortableServer.POA poa ) {
      this._impl = delegate;
      this._poa      = poa;
  }
  public scs.demos.mapreduce.RecordWriterOperations _delegate() {
      return this._impl;
  }
  public void _delegate (scs.demos.mapreduce.RecordWriterOperations delegate ) {
      this._impl = delegate;
  }
  public org.omg.PortableServer.POA _default_POA() {
      if(_poa != null) {
          return _poa;
      }
      else {
          return super._default_POA();
      }
  }
  public void open (String confFileName, scs.demos.mapreduce.FileSplit fileSplit, scs.demos.mapreduce.Reporter reporter) throws scs.demos.mapreduce.IOMapReduceException
  {
    _impl.open(confFileName, fileSplit, reporter);
  } // open

  public boolean write (org.omg.CORBA.Any key, org.omg.CORBA.Any value) throws scs.demos.mapreduce.IOMapReduceException
  {
    return _impl.write(key, value);
  } // write

  public void close () throws scs.demos.mapreduce.IOMapReduceException
  {
    _impl.close();
  } // close

  public scs.demos.mapreduce.FileSplit getFileSplit ()
  {
    return _impl.getFileSplit();
  } // getFileSplit

  private scs.demos.mapreduce.RecordWriterOperations _impl;
  private org.omg.PortableServer.POA _poa;

} // class RecordWriterPOATie
