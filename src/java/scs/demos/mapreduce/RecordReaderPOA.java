package scs.demos.mapreduce;


/**
* scs/demos/mapreduce/RecordReaderPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/mapReduce.idl
* Friday, December 12, 2008 6:43:16 PM BRST
*/


//Define operacoes para ler pares <key, value>
public abstract class RecordReaderPOA extends org.omg.PortableServer.Servant
 implements scs.demos.mapreduce.RecordReaderOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("open", new java.lang.Integer (0));
    _methods.put ("next", new java.lang.Integer (1));
    _methods.put ("close", new java.lang.Integer (2));
    _methods.put ("getFileSplit", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // scs/demos/mapreduce/RecordReader/open
       {
         try {
           String confFileName = in.read_string ();
           scs.demos.mapreduce.FileSplit fileSplit = scs.demos.mapreduce.FileSplitHelper.read (in);
           scs.demos.mapreduce.Reporter reporter = scs.demos.mapreduce.ReporterHelper.read (in);
           this.open (confFileName, fileSplit, reporter);
           out = $rh.createReply();
         } catch (scs.demos.mapreduce.IOMapReduceException $ex) {
           out = $rh.createExceptionReply ();
           scs.demos.mapreduce.IOMapReduceExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // scs/demos/mapreduce/RecordReader/next
       {
         try {
           org.omg.CORBA.AnyHolder key = new org.omg.CORBA.AnyHolder ();
           org.omg.CORBA.AnyHolder value = new org.omg.CORBA.AnyHolder ();
           boolean $result = false;
           $result = this.next (key, value);
           out = $rh.createReply();
           out.write_boolean ($result);
           out.write_any (key.value);
           out.write_any (value.value);
         } catch (scs.demos.mapreduce.IOMapReduceException $ex) {
           out = $rh.createExceptionReply ();
           scs.demos.mapreduce.IOMapReduceExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // scs/demos/mapreduce/RecordReader/close
       {
         try {
           this.close ();
           out = $rh.createReply();
         } catch (scs.demos.mapreduce.IOMapReduceException $ex) {
           out = $rh.createExceptionReply ();
           scs.demos.mapreduce.IOMapReduceExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 3:  // scs/demos/mapreduce/RecordReader/getFileSplit
       {
         scs.demos.mapreduce.FileSplit $result = null;
         $result = this.getFileSplit ();
         out = $rh.createReply();
         scs.demos.mapreduce.FileSplitHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:scs/demos/mapreduce/RecordReader:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public RecordReader _this() 
  {
    return RecordReaderHelper.narrow(
    super._this_object());
  }

  public RecordReader _this(org.omg.CORBA.ORB orb) 
  {
    return RecordReaderHelper.narrow(
    super._this_object(orb));
  }


} // class RecordReaderPOA
