package scs.core;


/**
* scs/core/_IMetaInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/scs.idl
* Friday, December 12, 2008 6:43:10 PM BRST
*/

public class _IMetaInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements scs.core.IMetaInterface
{

  public scs.core.FacetDescription[] getFacets ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getFacets", true);
                $in = _invoke ($out);
                scs.core.FacetDescription $result[] = scs.core.FacetDescriptionsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getFacets (        );
            } finally {
                _releaseReply ($in);
            }
  } // getFacets

  public scs.core.FacetDescription[] getFacetsByName (String[] names) throws scs.core.InvalidName
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getFacetsByName", true);
                scs.core.NameListHelper.write ($out, names);
                $in = _invoke ($out);
                scs.core.FacetDescription $result[] = scs.core.FacetDescriptionsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:scs/core/InvalidName:1.0"))
                    throw scs.core.InvalidNameHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getFacetsByName (names        );
            } finally {
                _releaseReply ($in);
            }
  } // getFacetsByName

  public scs.core.ReceptacleDescription[] getReceptacles ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getReceptacles", true);
                $in = _invoke ($out);
                scs.core.ReceptacleDescription $result[] = scs.core.ReceptacleDescriptionsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getReceptacles (        );
            } finally {
                _releaseReply ($in);
            }
  } // getReceptacles

  public scs.core.ReceptacleDescription[] getReceptaclesByName (String[] names) throws scs.core.InvalidName
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getReceptaclesByName", true);
                scs.core.NameListHelper.write ($out, names);
                $in = _invoke ($out);
                scs.core.ReceptacleDescription $result[] = scs.core.ReceptacleDescriptionsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:scs/core/InvalidName:1.0"))
                    throw scs.core.InvalidNameHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getReceptaclesByName (names        );
            } finally {
                _releaseReply ($in);
            }
  } // getReceptaclesByName

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:scs/core/IMetaInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _IMetaInterfaceStub
