package scs.core;


/**
* scs/core/IComponentPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/scs.idl
* Wednesday, December 10, 2008 9:40:10 AM BRST
*/

public abstract class IComponentPOA extends org.omg.PortableServer.Servant
 implements scs.core.IComponentOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("startup", new java.lang.Integer (0));
    _methods.put ("shutdown", new java.lang.Integer (1));
    _methods.put ("getFacet", new java.lang.Integer (2));
    _methods.put ("getFacetByName", new java.lang.Integer (3));
    _methods.put ("getComponentId", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // scs/core/IComponent/startup
       {
         try {
           this.startup ();
           out = $rh.createReply();
         } catch (scs.core.StartupFailed $ex) {
           out = $rh.createExceptionReply ();
           scs.core.StartupFailedHelper.write (out, $ex);
         }
         break;
       }

       case 1:  // scs/core/IComponent/shutdown
       {
         try {
           this.shutdown ();
           out = $rh.createReply();
         } catch (scs.core.ShutdownFailed $ex) {
           out = $rh.createExceptionReply ();
           scs.core.ShutdownFailedHelper.write (out, $ex);
         }
         break;
       }

       case 2:  // scs/core/IComponent/getFacet
       {
         String facet_interface = in.read_string ();
         org.omg.CORBA.Object $result = null;
         $result = this.getFacet (facet_interface);
         out = $rh.createReply();
         org.omg.CORBA.ObjectHelper.write (out, $result);
         break;
       }

       case 3:  // scs/core/IComponent/getFacetByName
       {
         String facet = in.read_string ();
         org.omg.CORBA.Object $result = null;
         $result = this.getFacetByName (facet);
         out = $rh.createReply();
         org.omg.CORBA.ObjectHelper.write (out, $result);
         break;
       }

       case 4:  // scs/core/IComponent/getComponentId
       {
         scs.core.ComponentId $result = null;
         $result = this.getComponentId ();
         out = $rh.createReply();
         scs.core.ComponentIdHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:scs/core/IComponent:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public IComponent _this() 
  {
    return IComponentHelper.narrow(
    super._this_object());
  }

  public IComponent _this(org.omg.CORBA.ORB orb) 
  {
    return IComponentHelper.narrow(
    super._this_object(orb));
  }


} // class IComponentPOA
