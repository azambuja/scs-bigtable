package scs.core;


/**
* scs/core/IReceptaclesPOATie.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ../../idl/scs.idl
* Wednesday, December 10, 2008 9:40:10 AM BRST
*/

public class IReceptaclesPOATie extends IReceptaclesPOA
{

  // Constructors

  public IReceptaclesPOATie ( scs.core.IReceptaclesOperations delegate ) {
      this._impl = delegate;
  }
  public IReceptaclesPOATie ( scs.core.IReceptaclesOperations delegate , org.omg.PortableServer.POA poa ) {
      this._impl = delegate;
      this._poa      = poa;
  }
  public scs.core.IReceptaclesOperations _delegate() {
      return this._impl;
  }
  public void _delegate (scs.core.IReceptaclesOperations delegate ) {
      this._impl = delegate;
  }
  public org.omg.PortableServer.POA _default_POA() {
      if(_poa != null) {
          return _poa;
      }
      else {
          return super._default_POA();
      }
  }
  public int connect (String receptacle, org.omg.CORBA.Object obj) throws scs.core.InvalidName, scs.core.InvalidConnection, scs.core.AlreadyConnected, scs.core.ExceededConnectionLimit
  {
    return _impl.connect(receptacle, obj);
  } // connect

  public void disconnect (int id) throws scs.core.InvalidConnection, scs.core.NoConnection
  {
    _impl.disconnect(id);
  } // disconnect

  public scs.core.ConnectionDescription[] getConnections (String receptacle) throws scs.core.InvalidName
  {
    return _impl.getConnections(receptacle);
  } // getConnections

  private scs.core.IReceptaclesOperations _impl;
  private org.omg.PortableServer.POA _poa;

} // class IReceptaclesPOATie
